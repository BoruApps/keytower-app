{"version":3,"sources":["webpack:///src/app/services/jha/jha.page.html","webpack:///src/app/services/jha/jha.page.ts","webpack:///src/app/services/jha/jha.module.ts","webpack:///src/app/services/jha/jha.page.scss"],"names":["JhaPage","modalController","httpClient","platform","toastController","router","appConst","route","data","apiurl","getApiUrl","queryParams","subscribe","params","console","log","key","undefined","lat","serviceid","job_name","ready","loadMap","map","create","camera","target","lng","zoom","tilt","navigate","event","fieldname","name","fieldvalue","value","tagName","textContent","selector","template","routes","path","component","JhaPageModule","imports","forChild","declarations"],"mappings":"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","file":"services-jha-jha-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>JHA/JSA</ion-title>\\n    <a href=\\\"services/detail/{{serviceid}}\\\"> <ion-icon name=\\\"close\\\" size=\\\"large\\\" style=\\\"float: right;\\\" ></ion-icon></a>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div id=\\\"map_canvas\\\"></div>\\n  <div>\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col size=\\\"4\\\"><ion-label>Lat</ion-label></ion-col>\\n        <ion-col>\\n          <ion-input type=\\\"text\\\" name=\\\"lat\\\" value=\\\"{{lat}}\\\" (ionInput)=\\\"addUpdate($event)\\\"></ion-input>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"4\\\"><ion-label>Long</ion-label></ion-col>\\n        <ion-col>\\n          <ion-input type=\\\"text\\\" name=\\\"long\\\" value=\\\"{{long}}\\\" (ionInput)=\\\"addUpdate($event)\\\"></ion-input>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"4\\\"><ion-label>Job Name</ion-label></ion-col>\\n        <ion-col>\\n          <ion-input type=\\\"text\\\" name=\\\"job_name\\\" value=\\\"{{job_name}}\\\" (ionInput)=\\\"addUpdate($event)\\\"></ion-input>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n    <br>\\n    <ion-button (click)=\\\"gotoJHAHospital()\\\" >NEXT </ion-button>\\n  </div>\\n <!-- <div style=\\\"width : 100% ;height: 60%\\\">\\n    <ion-list>\\n      <ion-item *ngFor=\\\"let place of places\\\">\\n        <p></p>\\n      </ion-item>\\n    </ion-list>\\n  </div>-->\\n</ion-content>\\n\";","import { Component, OnInit, LOCALE_ID, Inject, ViewChild ,ElementRef } from '@angular/core';\nimport { ActivatedRoute, Router } from  '@angular/router';\nimport {NavController, ToastController, AlertController, ModalController, Platform} from '@ionic/angular';\nimport { AppConstants } from '../../providers/constant/constant';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {\n    GoogleMaps,\n    GoogleMap,\n    GoogleMapsEvent,\n    GoogleMapOptions,\n    CameraPosition,\n    MarkerOptions,\n    Marker,\n    Environment\n} from '@ionic-native/google-maps';\n\n@Component({\n  selector: 'app-jha',\n  templateUrl: './jha.page.html',\n  styleUrls: ['./jha.page.scss'],\n})\n\nexport class JhaPage implements OnInit {\n    apiurl:any;\n    lat: any;\n    long:any;\n    serviceid:any;\n    job_name: any;\n    data: any = {};\n    places : Array<any> ;\n    map: GoogleMap;\n    constructor(\n        private modalController: ModalController,\n        public httpClient: HttpClient,\n        public platform: Platform,\n        public toastController: ToastController,\n        private  router:  Router,\n        public appConst: AppConstants,\n        public route: ActivatedRoute\n    ){\n        this.apiurl = this.appConst.getApiUrl();\n    }\n\n    /*async ngOnInit() {\n      this.route.queryParams\n          .subscribe(params => {\n              console.log(params);\n              for(let key in params){\n                console.log(key);\n                if(params[key] != undefined){\n                    this.data[key] = params[key];\n                }\n              }\n              this.lat = params.lat;\n              this.long = params.long;\n              this.serviceid = params.serviceid;\n              this.job_name = params.job_name;\n              this.serviceid = params.serviceid;\n              this.loadMap(this.lat, this.long);\n          });\n  }*/\n\n    async ngOnInit() {\n        this.route.queryParams\n            .subscribe(params => {\n                console.log(params);\n                for(let key in params){\n                    console.log(key);\n                    if(params[key] != undefined){\n                        this.data[key] = params[key];\n                    }\n                }\n                this.lat = params.lat;\n                this.long = params.long;\n                this.serviceid = params.serviceid;\n                this.job_name = params.job_name;\n                this.serviceid = params.serviceid;\n            });\n\n        // Since ngOnInit() is executed before `deviceready` event,\n        // you have to wait the event.\n        await this.platform.ready();\n        await this.loadMap();\n    }\n    loadMap() {\n        console.log('load Map');\n        this.map = GoogleMaps.create('map_canvas', {\n            camera: {\n                target: {\n                    lat: this.lat,\n                    lng: this.long\n                },\n                zoom: 18,\n                tilt: 30\n            }\n        });\n\n    }\n\n    /*addMap(lat, long) {\n        console.log(lat);\n        console.log(long);\n        let latLng = new google.maps.LatLng(lat,long);\n        console.log(latLng);\n        let mapOptions = {\n            center: latLng,\n            zoom: 15,\n            mapTypeId: google.maps.MapTypeId.ROADMAP\n        }\n\n        this.map = new google.maps.Map(this.mapElement.nativeElement, mapOptions);\n\n        /!*this.getHospital(latLng).then((results : Array<any>)=>{\n            this.places = results;\n            for(let i = 0 ;i < results.length ; i++) {\n                this.createMarker(results[i]);\n            }\n        },(status)=>console.log(status));*!/\n\n        this.addMarker();\n\n    }\n    addMarker() {\n\n        let marker = new google.maps.Marker({\n            map: this.map,\n            animation: google.maps.Animation.DROP,\n            position: this.map.getCenter()\n        });\n\n        let content = \"<p>This is your current position !</p>\";\n        let infoWindow = new google.maps.InfoWindow({\n            content: content\n        });\n\n        google.maps.event.addListener(marker, 'click', () => {\n            infoWindow.open(this.map, marker);\n        });\n\n    }\n    getHospital(latLng) {\n        var service = new google.maps.places.PlacesService(this.map);\n        let request = {\n            location : latLng,\n            radius : 8047 ,\n            types: [\"hospital\"]\n        };\n        return new Promise((resolve,reject)=>{\n            service.nearbySearch(request,function(results,status){\n                if (status === google.maps.places.PlacesServiceStatus.OK) {\n                    resolve(results);\n                } else {\n                    reject(status);\n                }\n\n            });\n        });\n\n    }\n    createMarker(place) {\n        let marker = new google.maps.Marker({\n            map: this.map,\n            animation: google.maps.Animation.DROP,\n            position: place.geometry.location\n        });\n    }*/\n\n    gotoJHAHospital() {\n        this.router.navigate(['services/jha-hospital'], { queryParams: {serviceid: this.serviceid, lat: this.data[\"lat\"], long: this.data[\"long\"], job_name: this.data[\"job_name\"]} });\n    }\n    addUpdate(event) {\n        var fieldname = event.target.name;\n        var fieldvalue =  event.target.value;\n        if (event.target.tagName == 'ION-INPUT'){\n            fieldvalue = event.target.textContent + event.target.value;\n        }\n        this.data[fieldname] = fieldvalue;\n        console.log(this.data);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { JhaPage } from './jha.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: JhaPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [JhaPage]\n})\nexport class JhaPageModule {}\n","export default \"ion-input {\\n  border-bottom: 1px solid #ccc;\\n}\\n\\n#map_canvas {\\n  height: 90%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2poYS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSw2QkFBQTtBQUNGOztBQUNBO0VBQ0UsV0FBQTtBQUVGIiwiZmlsZSI6ImpoYS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24taW5wdXR7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjY2NjO1xufVxuI21hcF9jYW52YXN7XG4gIGhlaWdodDogOTAlO1xufSJdfQ== */\";"]}