{"version":3,"sources":["webpack:///src/app/services/services.module.ts","webpack:///src/app/services/profile/profile.page.ts","webpack:///src/app/services/services.page.html","webpack:///src/app/services/services.page.ts","webpack:///src/app/services/profile/profile.page.html","webpack:///src/app/services/profile/profile.page.scss","webpack:///src/app/services/services.page.scss"],"names":["routes","path","component","ServicesPageModule","imports","forChild","declarations","entryComponents","ProfileModalPage","modalController","storage","router","navParams","httpClient","pickerCtrl","transfer","formBuilder","toastController","imgpov","appConst","loadingController","has_profile_picture","apiurl","getApiUrl","user_id","data","userinfo","profile_picture","imagename","console","log","create","message","loading","present","setTimeout","undefined","dismiss","onClosedData","updatefields","headers","append","showLoading","post","observe","subscribe","hideLoading","presentToastPrimary","closeModal","presentToast","error","duration","position","color","toast","set","navigateByUrl","current_theme","get","then","userdata","length","theme","toLowerCase","isLogged","result","userjson","charAt","toUpperCase","slice","getCurrentTheme","theme_switcher","destination_theme","document","body","classList","toggle","updateCurrentTheme","log_status","selector","template","ServicesPage","navCtrl","activatedRoute","modalCtrl","locale","count_weeklyServices","count_futureServices","count_completedServices","service","id","tower","tos","desc","longdate","startTime","endTime","status","randomPeople","typesOfServices","statuses","type","limit","init","services","i","date","Date","startDay","Math","floor","random","endDay","startMinute","endMinute","getFullYear","getMonth","getDate","getMinutes","randomTOS","randomStatus","start","end","availableStatuses","push","serviceid","state","logged_user","success","workorders","forEach","workorder","weeklyServices","futureServices","completedServices","componentProps","modal","onDidDismiss","dataReturned","params","userData","loadTheme","getWorkOrders","logout"],"mappings":"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","file":"services-services-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ServicesPage } from './services.page';\nimport { ProfileModalPage } from './profile/profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ServicesPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ServicesPage, ProfileModalPage],\n    entryComponents: [ProfileModalPage],\n})\nexport class ServicesPageModule {}\n","import {Component, OnInit} from '@angular/core';\nimport {ModalController, NavParams, ToastController, PickerController} from '@ionic/angular';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {FileTransfer, FileUploadOptions, FileTransferObject} from '@ionic-native/file-transfer/ngx';\nimport {File} from '@ionic-native/file';\nimport {Validators, FormBuilder, FormGroup} from '@angular/forms';\nimport {ImageProvider} from '../../providers/image/image';\nimport {AppConstants} from '../../providers/constant/constant';\nimport {Router} from '@angular/router';\nimport {Storage} from '@ionic/storage';\nimport {LoadingController} from '@ionic/angular';\n\n@Component({\n    selector: 'app-profile',\n    templateUrl: './profile.page.html',\n    styleUrls: ['./profile.page.scss'],\n})\nexport class ProfileModalPage implements OnInit {\n    user_id: any;\n    userinfo: any;\n    imageData: any;\n    modalTitle: string;\n    modelId: number;\n    serviceid: any;\n    apiurl: any;\n    updatefields: any;\n    profile_picture: any;\n    has_profile_picture: boolean = false;\n\n    constructor(\n        private modalController: ModalController,\n        public storage: Storage,\n        private router: Router,\n        private navParams: NavParams,\n        public httpClient: HttpClient,\n        private pickerCtrl: PickerController,\n        private transfer: FileTransfer,\n        private formBuilder: FormBuilder,\n        public toastController: ToastController,\n        public imgpov: ImageProvider,\n        public appConst: AppConstants,\n        public loadingController: LoadingController\n    ) {\n        //this.imageData = this.imgpov.getImage();\n        this.apiurl = this.appConst.getApiUrl();\n    }\n\n    ngOnInit() {\n        this.user_id = this.navParams.data.user_id;\n        this.userinfo = this.navParams.data.userinfo;\n        this.profile_picture = this.navParams.data.userinfo.profile_picture;\n        if (this.navParams.data.userinfo.imagename !== \"\") {\n            this.has_profile_picture = true\n        } else {\n            this.has_profile_picture = false;\n        }\n        console.log('nav params', this.navParams.data.userinfo);\n    }\n\n    loading: any;\n\n    async showLoading() {\n        this.loading = await this.loadingController.create({\n            message: 'Loading ...'\n        });\n        return await this.loading.present();\n    }\n\n    async hideLoading() {\n        setTimeout(() => {\n            if (this.loading != undefined) {\n                this.loading.dismiss();\n            }\n        }, 1000);\n    }\n\n    async closeModal() {\n        const onClosedData: string = \"Wrapped Up!\";\n        await this.modalController.dismiss(onClosedData);\n    }\n\n    async sendUpdates() {\n        this.updatefields;\n        var headers = new HttpHeaders();\n        headers.append(\"Accept\", 'application/json');\n        headers.append('Content-Type', 'application/json');\n        headers.append('Access-Control-Allow-Origin', '*');\n        this.showLoading();\n        this.httpClient.post(this.apiurl + \"updateProfile.php\", this.updatefields, {\n            headers: headers,\n            observe: 'response'\n        })\n            .subscribe(data => {\n                this.hideLoading();\n                //console.log(data['_body']);\n                if (data['body']['success'] == true) {\n                    this.presentToastPrimary('Profile updated \\n');\n                    this.closeModal();\n                } else {\n                    console.log('update failed');\n                    this.presentToast('Profile update failed! Please try again \\n');\n                }\n            }, error => {\n                this.hideLoading();\n                //console.log(error);\n                //console.log(error.message);\n                //console.error(error.message);\n                this.presentToast(\"Profile update failed! Please try again \\n\" + error.message);\n            });\n    }\n\n    async presentToast(message: string) {\n        var toast = await this.toastController.create({\n            message: message,\n            duration: 3500,\n            position: \"bottom\",\n            color: \"danger\"\n        });\n        toast.present();\n    }\n\n    async presentToastPrimary(message: string) {\n        var toast = await this.toastController.create({\n            message: message,\n            duration: 2000,\n            position: \"bottom\",\n            color: \"primary\"\n        });\n        toast.present();\n    }\n\n    logout() {\n        console.log('logout clicked');\n        this.storage.set(\"userdata\", null);\n        this.closeModal();\n        this.router.navigateByUrl('/login');\n    }\n\n    async getCurrentTheme() {\n        var current_theme = this.storage.get('userdata').then((userdata) => {\n            if (userdata && userdata.length !== 0) {\n                //current_theme = userdata.theme.toLowerCase();\n                return userdata.theme.toLowerCase();\n            } else {\n                return false;\n            }\n        })\n        return current_theme;\n    }\n\n    async updateCurrentTheme(theme: string) {\n        var userjson: object;\n        await this.isLogged().then(result => {\n            if (!(result == false)) {\n                userjson = result;\n            }\n        })\n        //console.log('from set current theme', userjson.theme);\n        userjson['theme'] = theme.charAt(0).toUpperCase() + theme.slice(1);\n        //console.log('from set current theme', userjson);\n        this.storage.set('userdata', userjson);\n        this.userinfo.theme = theme.charAt(0).toUpperCase() + theme.slice(1);\n        console.log('updated theme on storage memory');\n    }\n\n    async switchTheme() {\n        var current_theme;\n        await this.getCurrentTheme().then((theme) => {\n            console.log(\"the current theme is\", theme);\n            current_theme = theme;\n        });\n        var theme_switcher = {\n            \"dark\": \"light\",\n            \"light\": \"dark\"\n        };\n        var destination_theme = theme_switcher[current_theme]\n        console.log('switching theme from:', current_theme);\n        console.log('switching theme to:', destination_theme);\n        document.body.classList.toggle(destination_theme, true);\n        document.body.classList.toggle(current_theme, false);\n        this.updateCurrentTheme(destination_theme);\n        console.log('theme switched');\n    }\n\n    async isLogged() {\n        var log_status = this.storage.get('userdata').then((userdata) => {\n            if (userdata && userdata.length !== 0) {\n                return userdata;\n            } else {\n                return false;\n            }\n        })\n        return log_status;\n    }\n\n    loadTheme(theme) {\n        console.log('loading theme', theme);\n        document.body.classList.toggle(theme, true);\n        var theme_switcher = {\n            \"dark\": \"light\",\n            \"light\": \"dark\"\n        };\n        document.body.classList.toggle(theme_switcher[theme], false); //switch off previous theme if there was one and prefer the loaded theme.\n        console.log('turning off previous theme', theme_switcher[theme]);\n    }\n\n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"primary\\\">\\n      <ion-button type=\\\"button\\\" text=\\\"Profile\\\" (click)=\\\"openSettings()\\\">\\n        <ion-text>Profile</ion-text>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>Work Orders</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list lines=\\\"full\\\">\\n\\n      <ion-item-divider sticky=\\\"true\\\">\\n        <ion-label>\\n          Today ({{count_weeklyServices}})\\n        </ion-label>\\n      </ion-item-divider>\\n\\n    <!-- <ion-list-header>\\n      <ion-label>Today's Open Services</ion-label>\\n    </ion-list-header> -->\\n    <p class=\\\"ion-padding\\\" *ngIf=\\\"count_weeklyServices == 0\\\">No work orders available for this section</p>\\n    <div  *ngIf=\\\"count_weeklyServices > 0\\\">\\n    <ion-item (click)=\\\"goToDetail(service.workorderid)\\\" detail *ngFor=\\\"let service of weeklyServices\\\">\\n      <ion-avatar><ion-icon size=\\\"large\\\" name=\\\"flash\\\"></ion-icon></ion-avatar>\\n      <ion-label>\\n        <h2>{{service[0]}}</h2>\\n        <h2>{{service.towersites}}</h2>\\n        <p>{{service.longdate}}</p>\\n        <div class=\\\"service-details-div\\\">\\n          <ion-grid class=\\\"service-details-grid\\\">\\n            <ion-row>\\n              <ion-col><p class=\\\"st\\\">Start Time</p></ion-col>\\n              <ion-col><p class=\\\"et\\\">End Time</p></ion-col>\\n            </ion-row>\\n            <ion-row>\\n              <ion-col><p>{{service.time_start}}</p></ion-col>\\n              <ion-col><p>{{service.time_end}}</p></ion-col>\\n            </ion-row>\\n          </ion-grid>\\n        </div>\\n      </ion-label>\\n      <ion-badge slot=\\\"end\\\" class=\\\"status\\\" color=\\\"white\\\"\\n      data-color=\\\"{{(service?.wostatus == 'Cancelled' || service?.wostatus == 'Declined') ? 'danger' : 'warning'}}\\\"\\n      [ngStyle]=\\\"{'background-color': service?.wostatus == 'Cancelled' || service?.wostatus == 'Declined' ? 'var(--ion-color-danger)' :\\n      service?.wostatus == 'Under Review' ? 'var(--ion-color-warning)' :\\n      service?.wostatus == 'Completed' ? 'var(--ion-color-medium)' : 'var(--ion-color-success)', 'border-color':service?.wostatus == 'Cancelled' || service?.wostatus == 'Declined' ? 'var(--ion-color-danger)' : service?.wostatus == 'Under Review' ? 'var(--ion-color-warning)' : 'var(--ion-color-success)' }\\\"\\n      >\\n        <ion-text class=\\\"status-text\\\">{{service.wostatus}}</ion-text>\\n      </ion-badge>\\n    </ion-item>\\n    </div>\\n\\n    <ion-item-divider sticky=\\\"true\\\">\\n        <ion-label>\\n          Upcoming ({{count_futureServices}})\\n        </ion-label>\\n      </ion-item-divider>\\n\\n    <!-- <ion-list-header sticky=\\\"true\\\" lines=\\\"none\\\">\\n      <ion-label>Future Services</ion-label>\\n    </ion-list-header> -->\\n\\n      <ion-item (click)=\\\"goToDetail(service.workorderid)\\\" detail *ngFor=\\\"let service of futureServices\\\">\\n        <ion-avatar><ion-icon size=\\\"large\\\" name=\\\"flash\\\"></ion-icon></ion-avatar>\\n        <ion-label>\\n          <h2>{{service[0]}}</h2>\\n          <h2>{{service.towersites}}</h2>\\n          <p>{{service.longdate}}</p>\\n          <div class=\\\"service-details-div\\\">\\n            <ion-grid class=\\\"service-details-grid\\\">\\n              <ion-row>\\n                <ion-col><p class=\\\"st\\\">Start Time</p></ion-col>\\n                <ion-col><p class=\\\"et\\\">End Time</p></ion-col>\\n              </ion-row>\\n              <ion-row>\\n                <ion-col><p>{{service.time_start}}</p></ion-col>\\n                <ion-col><p>{{service.time_end}}</p></ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </div>\\n        </ion-label>\\n        <ion-badge slot=\\\"end\\\" class=\\\"status\\\" color=\\\"medium\\\"\\n        data-color=\\\"{{(service?.wostatus == 'Cancelled' || service?.wostatus == 'Declined') ? 'danger' : 'success'}}\\\"\\n        [ngStyle]=\\\"{'background-color': service?.wostatus == 'Cancelled' || service?.wostatus == 'Declined' ? 'var(--ion-color-danger)' :\\n      service?.wostatus == 'Under Review' ? 'var(--ion-color-warning)' :\\n      service?.wostatus == 'Completed' ? 'var(--ion-color-medium)' : 'var(--ion-color-success)', 'border-color':service?.wostatus == 'Cancelled' || service?.wostatus == 'Declined' ? 'var(--ion-color-danger)' : service?.wostatus == 'Under Review' ? 'var(--ion-color-warning)' : 'var(--ion-color-success)' }\\\"\\n        >\\n          <ion-text class=\\\"status-text\\\">{{service.wostatus}}</ion-text>\\n        </ion-badge>\\n      </ion-item>\\n    <p class=\\\"ion-padding\\\" *ngIf=\\\"count_futureServices == 0\\\">No work orders available for this section</p>\\n\\n\\n    <ion-item-divider sticky=\\\"true\\\">\\n      <ion-label>\\n        Completed ({{count_completedServices}})\\n      </ion-label>\\n    </ion-item-divider>\\n\\n    <!-- <ion-list-header>\\n      <ion-label>All Completed Services</ion-label>\\n    </ion-list-header> -->\\n\\n    <ion-item (click)=\\\"goToDetail(service.workorderid)\\\" detail *ngFor=\\\"let service of completedServices\\\">\\n      <ion-avatar><ion-icon size=\\\"large\\\" name=\\\"document\\\"></ion-icon></ion-avatar>\\n      <ion-label>\\n        <h2>{{service[0]}}</h2>\\n        <h2>{{service.towersites}}</h2>\\n        <p>{{service.longdate}}</p>\\n        <div class=\\\"service-details-div\\\">\\n          <ion-grid class=\\\"service-details-grid\\\">\\n            <ion-row>\\n              <ion-col><p class=\\\"st\\\">Start Time</p></ion-col>\\n              <ion-col><p class=\\\"et\\\">End Time</p></ion-col>\\n            </ion-row>\\n            <ion-row>\\n              <ion-col><p>{{service.time_start}}</p></ion-col>\\n              <ion-col><p>{{service.time_end}}</p></ion-col>\\n            </ion-row>\\n          </ion-grid>\\n        </div>\\n      </ion-label>\\n      <ion-badge size=\\\"large\\\" slot=\\\"end\\\" color=\\\"white\\\" data-color=\\\"medium\\\" class=\\\"status\\\"\\n      [ngStyle]=\\\"{'background-color': 'var(--ion-color-medium)' , 'border-color': 'var(--ion-color-medium)' }\\\">\\n        <ion-text class=\\\"status-text\\\">{{service.wostatus}}</ion-text>\\n      </ion-badge>\\n    </ion-item>\\n    <p class=\\\"ion-padding\\\" *ngIf=\\\"count_completedServices == 0\\\">No work orders available for this section</p>\\n  </ion-list>\\n</ion-content>\\n\";","import {Component, OnInit, LOCALE_ID, Inject,} from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {NavController, ModalController} from '@ionic/angular';\nimport {formatDate} from '@angular/common';\nimport {HttpHeaders, HttpClient} from '@angular/common/http';\nimport {Storage} from '@ionic/storage';\nimport {AppConstants} from '../providers/constant/constant';\nimport {ProfileModalPage} from './profile/profile.page';\nimport {LoadingController} from '@ionic/angular';\n\n@Component({\n    selector: 'app-services',\n    templateUrl: './services.page.html',\n    styleUrls: ['./services.page.scss'],\n})\nexport class ServicesPage implements OnInit {\n    userinfo: any;\n    user_id: any;\n    weeklyServices: object;\n    futureServices: object;\n    completedServices: object;\n    count_weeklyServices: number = 0;\n    count_futureServices: number = 0;\n    count_completedServices: number = 0;\n    apiurl: any;\n    service = {\n        id: '',\n        tower: '', //Will be the Transferee + type of service\n        tos: '',\n        desc: '', //Will be address here\n        longdate: '',\n        startTime: '', //Will be time as 00:00 A/PM\n        endTime: '', //Will be time as 00:00 A/PM\n        status: '',\n    };\n\n    randomPeople = ['Simmons - MOSPG2014', 'Marysville - ARLIT2062', 'Coldspring - TXHOU2041', 'Yellow Rock - KYLEX2020', 'Medora - ILSPG2027', 'Lawtell - LALWL2000', 'HWY 584 (FTCA) - LAMON2002', 'HWY 120 (FTCA) - LASRV2006', 'York - ALBRH2003', 'Jorge Auto Sales - TXLAR2007', 'Sawmill - ARLIT2065', 'Saxton - PAPIT2008', 'Rockwood - PAPIT2006', 'Mellen - WIWAU2029', 'Calvin - LAMON2113', 'Funston - LARSV2021'];\n    typesOfServices = ['Radio Implementation Services', 'Labor', 'Mount Installation', 'Power Installation', 'Structural Analysis'];\n    statuses = ['Attention Required', 'Declined', 'Complete', 'Cancelled', 'Closed', 'Open'];\n    dataReturned: any;\n\n    constructor(\n        private httpClient: HttpClient,\n        public navCtrl: NavController,\n        private router: Router,\n        public storage: Storage,\n        private activatedRoute: ActivatedRoute,\n        public appConst: AppConstants,\n        public modalCtrl: ModalController,\n        @Inject(LOCALE_ID) private locale: string,\n        public loadingController: LoadingController\n    ) {\n        this.apiurl = this.appConst.getApiUrl();\n    }\n\n    loading: any;\n\n    async showLoading() {\n        this.loading = await this.loadingController.create({\n            message: 'Loading ...'\n        });\n        return await this.loading.present();\n    }\n\n    async hideLoading() {\n        setTimeout(() => {\n            if(this.loading != undefined){\n                this.loading.dismiss();\n            }\n        }, 1000);\n    }\n\n    async loadRandomServices(type) {\n        var limit = 16;\n        var init = 0;\n        if (type == 'today') {\n            var limit = 5;\n        } else if (type == 'future') {\n            var limit = 10;\n            init = 5;\n        } else if (type == 'completed') {\n            init = 0;\n        }\n        var services = [];\n        for (var i = init; i < limit; i += 1) {\n            var date = new Date();\n            var startDay = Math.floor(Math.random() * 90) - 45;\n            var endDay = Math.floor(Math.random() * 2) + startDay;\n            var startTime;\n            var endTime;\n            var desc;\n            var startMinute = Math.floor(Math.random() * 24 * 60);\n            var endMinute = Math.floor(Math.random() * 180) + startMinute;\n            startTime = new Date(date.getFullYear(), date.getMonth(), date.getDate() + startDay, 0, date.getMinutes() + startMinute);\n            endTime = new Date(date.getFullYear(), date.getMonth(), date.getDate() + endDay, 0, date.getMinutes() + endMinute);\n            var randomTOS = i % this.typesOfServices.length;\n            var randomStatus = i % this.statuses.length;\n            let start = formatDate(startTime, 'shortTime', this.locale);\n            let end = formatDate(endTime, 'shortTime', this.locale);\n            let longdate = formatDate(startTime, 'medium', this.locale);\n            var availableStatuses = this.statuses;\n            var status = this.statuses[randomStatus];\n            if (type == 'today') {\n                var availableStatuses = ['Open', 'Cancelled', 'Attention Required'];\n            }\n            if (type == 'future') {\n                var availableStatuses = ['Cancelled', 'Open', 'Declined',];\n            }\n            var status = availableStatuses[i % availableStatuses.length];\n            if (type == 'completed') {\n                var status = 'Completed';\n            }\n            services.push({\n                id: i,\n                tower: this.randomPeople[i],\n                tos: this.typesOfServices[randomTOS],\n                desc: '',\n                longdate: longdate,\n                startTime: start,\n                endTime: end,\n                status: status,\n            });\n        }\n        return services;\n    }\n\n    goToDetail(serviceid) {\n        this.router.navigateByUrl(`/services/detail/${serviceid}`, {state: {}});\n    }\n\n    logout() {\n        console.log('logout clicked');\n        this.storage.set(\"userdata\", null);\n        this.router.navigateByUrl('/login');\n    }\n\n    async getCurrentTheme() {\n        var current_theme = this.storage.get('userdata').then((userdata) => {\n            if (userdata && userdata.length !== 0) {\n                //current_theme = userdata.theme.toLowerCase();\n                return userdata.theme.toLowerCase();\n            } else {\n                return false;\n            }\n        })\n        return current_theme;\n    }\n\n    async updateCurrentTheme(theme: string) {\n        var userjson: object;\n        await this.isLogged().then(result => {\n            if (!(result == false)) {\n                userjson = result;\n            }\n        })\n        //console.log('from set current theme', userjson.theme);\n        userjson['theme'] = theme.charAt(0).toUpperCase() + theme.slice(1);\n        //console.log('from set current theme', userjson);\n        this.storage.set('userdata', userjson);\n        this.userinfo.theme = theme.charAt(0).toUpperCase() + theme.slice(1);\n        console.log('updated theme on storage memory');\n    }\n\n    async switchTheme() {\n        var current_theme;\n        await this.getCurrentTheme().then((theme) => {\n            console.log(\"the current theme is\", theme);\n            current_theme = theme;\n        });\n        var theme_switcher = {\n            \"dark\": \"light\",\n            \"light\": \"dark\"\n        };\n        var destination_theme = theme_switcher[current_theme]\n        console.log('switching theme from:', current_theme);\n        console.log('switching theme to:', destination_theme);\n        document.body.classList.toggle(destination_theme, true);\n        document.body.classList.toggle(current_theme, false);\n        this.updateCurrentTheme(destination_theme);\n        console.log('theme switched');\n    }\n\n    async isLogged() {\n        var log_status = this.storage.get('userdata').then((userdata) => {\n            if (userdata && userdata.length !== 0) {\n                return userdata;\n            } else {\n                return false;\n            }\n        })\n        return log_status;\n    }\n\n    loadTheme(theme) {\n        console.log('loading theme', theme);\n        document.body.classList.toggle(theme, true);\n        var theme_switcher = {\n            \"dark\": \"light\",\n            \"light\": \"dark\"\n        };\n        document.body.classList.toggle(theme_switcher[theme], false); //switch off previous theme if there was one and prefer the loaded theme.\n        console.log('turning off previous theme', theme_switcher[theme]);\n    }\n\n    getWorkOrders(user_id, type) {\n        var logged_user = {\n            user_id: user_id,\n            type: type\n        }\n        console.log('fetching records for', logged_user);\n        var headers = new HttpHeaders();\n        headers.append(\"Accept\", 'application/json');\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        headers.append('Access-Control-Allow-Origin', '*');\n        //this.showLoading();\n        this.httpClient.post(this.apiurl + \"getWorkOrders.php\", logged_user, {headers: headers, observe: 'response'})\n            .subscribe(data => {\n                //this.hideLoading();\n                console.log(data['body']);\n                var success = data['body']['success'];\n                console.log('services page: login response was', success);\n\n                if (success == true) {\n                    var workorders = data['body']['data'];\n                    console.log('services page: workorders', workorders);\n                    if (data['body']['count'] > 0) {\n                        workorders.forEach(workorder => {\n                            workorder['longdate'] = workorder['date_start'] + ' ' + workorder['time_start'];\n                        });\n                    }\n                    if (type == 'weekly') {\n                        this.weeklyServices = workorders;\n                        this.count_weeklyServices = data['body']['count'];\n                    } else if (type == 'future') {\n                        this.futureServices = workorders;\n                        this.count_futureServices = data['body']['count'];\n                    } else if (type == 'completed') {\n                        this.completedServices = workorders;\n                        this.count_completedServices = data['body']['count'];\n                    }\n                } else {\n                    console.log('failed to fetch records');\n                }\n\n            }, error => {\n                //this.hideLoading();\n                //console.log(error);\n                //console.log(error.message);\n                //console.error(error.message);\n                console.log('failed to fetch records');\n            });\n    }\n\n    async openSettings() {\n        console.log('opening settings page for user id', this.user_id);\n        const modal = await this.modalCtrl.create({\n            component: ProfileModalPage,\n            componentProps: {\n                \"user_id\": this.user_id,\n                \"userinfo\": this.userinfo,\n            }\n        });\n\n        modal.onDidDismiss().then((dataReturned) => {\n            if (dataReturned !== null) {\n                this.dataReturned = dataReturned.data;\n            }\n        });\n\n        return await modal.present();\n    }\n\n    ngOnInit() {\n        this.activatedRoute.params.subscribe((userData) => {\n            if (userData.length !== 0) {\n                this.userinfo = userData;\n                //console.log('param user data:', userData);\n                try {\n                    this.loadTheme(userData.theme.toLowerCase());\n                } catch {\n                    console.log('couldnt load theme');\n                }\n                console.log('param user data length:', userData.length);\n                if (userData.length == undefined) {\n                    console.log('nothing in params, so loading from storage');\n                    this.isLogged().then(result => {\n                        if (!(result == false)) {\n                            //console.log('loading storage data (within param route function)', result);\n                            this.userinfo = result;\n                            this.loadTheme(result.theme.toLowerCase());\n                            this.getWorkOrders(this.userinfo.id, 'weekly');\n                            this.getWorkOrders(this.userinfo.id, 'future');\n                            this.getWorkOrders(this.userinfo.id, 'completed');\n                            this.user_id = this.userinfo.id;\n                        } else {\n                            console.log('nothing in storage, going back to login');\n                            this.logout();\n                        }\n                    });\n                }\n            }\n        });\n        //this.loadRandomServices('today').then((result) => { this.todayServices= result; });\n        // this.loadRandomServices('future').then((result) => { this.futureServices= result; });\n        // this.loadRandomServices('completed').then((result) => { this.completedServices= result; });\n    }\n\n}\n","export default \"<ion-header>\\n    <ion-toolbar text-center>\\n        <ion-title>Profile</ion-title>\\n        <ion-icon name=\\\"close\\\" (click)=\\\"closeModal()\\\" size=\\\"large\\\"></ion-icon>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n    <ion-item lines=\\\"none\\\" >\\n            <ion-avatar *ngIf=\\\"has_profile_picture == true\\\">\\n                <img src=\\\"{{profile_picture}}\\\">  \\n            </ion-avatar>\\n        <div *ngIf=\\\"has_profile_picture == true\\\">\\n            &nbsp;&nbsp;   \\n        </div> \\n        <ion-text>Hello, <b>{{userinfo?.first_name}}</b>!</ion-text>\\n    </ion-item>\\n    <ion-item lines=\\\"none\\\">\\n        <ion-label position=\\\"stacked\\\">USER NAME</ion-label>\\n        <ion-text>{{userinfo?.user_name}}</ion-text>\\n    </ion-item>\\n    <ion-item lines=\\\"none\\\">\\n        <ion-label position=\\\"stacked\\\">FULL NAME</ion-label>\\n        <ion-text value=\\\"\\\">{{userinfo?.first_name}} {{userinfo?.last_name}}</ion-text>\\n    </ion-item>\\n    <ion-item lines=\\\"none\\\">\\n        <ion-label position=\\\"stacked\\\">EMAIL</ion-label>\\n        <ion-text value=\\\"\\\">{{userinfo?.email1}}</ion-text>\\n    </ion-item>\\n    <ion-item lines=\\\"none\\\">\\n        <br>\\n        <ion-label position=\\\"stacked\\\">\\n            CURRENT THEME (TAP TO CHANGE)\\n        </ion-label>\\n        <ion-button id=\\\"themecolor\\\" *ngIf=\\\"userinfo?.theme=='Dark'\\\" type=\\\"button\\\" size=\\\"default\\\" color=\\\"dark\\\" (click)=\\\"switchTheme()\\\"><ion-icon name=\\\"color-palette\\\"></ion-icon>&nbsp; {{userinfo.theme}}</ion-button>\\n        <ion-button id=\\\"themecolor\\\" *ngIf=\\\"userinfo?.theme=='Light'\\\" type=\\\"button\\\" size=\\\"default\\\" color=\\\"dark\\\" (click)=\\\"switchTheme()\\\"><ion-icon name=\\\"color-palette\\\"></ion-icon>&nbsp; {{userinfo.theme}}</ion-button>\\n        <!-- <ion-grid class=\\\"ion-no-padding\\\">\\n            <ion-row class=\\\"ion-align-items-center ion-justify-content-center\\\" >\\n            <ion-col class=\\\"padding-left-none\\\" >\\n                <ion-label position=\\\"stacked\\\">Current Theme <br/> (Tap to change)</ion-label> \\n            </ion-col>\\n            <ion-col>\\n                <ion-button id=\\\"themecolor\\\" *ngIf=\\\"userinfo?.theme=='Dark'\\\" type=\\\"button\\\" size=\\\"default\\\" color=\\\"dark\\\" (click)=\\\"switchTheme()\\\"><ion-icon name=\\\"color-palette\\\"></ion-icon>&nbsp; {{userinfo.theme}}</ion-button>\\n                <ion-button id=\\\"themecolor\\\" *ngIf=\\\"userinfo?.theme=='Light'\\\" type=\\\"button\\\" size=\\\"default\\\" color=\\\"dark\\\" (click)=\\\"switchTheme()\\\"><ion-icon name=\\\"color-palette\\\"></ion-icon>&nbsp; {{userinfo.theme}}</ion-button>\\n            </ion-col>          \\n            </ion-row>\\n            <ion-row class=\\\"ion-align-items-center ion-justify-content-center\\\">\\n            <ion-col class=\\\"padding-left-none\\\">\\n            </ion-col>\\n            <ion-col>\\n                \\n            </ion-col>\\n            </ion-row>\\n        </ion-grid> -->\\n        <br>\\n    </ion-item>\\n    <br><br><br><br>\\n    \\n    <ion-button (click)=\\\"logout()\\\" color=\\\"danger\\\" routerDirection=\\\"root\\\" size=\\\"default\\\"><ion-icon name=\\\"log-out\\\"></ion-icon> &nbsp; Logout</ion-button>\\n    \\n</ion-content>\";","export default \"ion-card-header {\\n  padding-bottom: 0px !important;\\n}\\n\\nion-card-content {\\n  padding-top: 10px !important;\\n}\\n\\nion-input input.native-input {\\n  border: 1px solid #ccc !important;\\n  padding-left: 20px !important;\\n  padding-right: 20px !important;\\n}\\n\\nion-toolbar ion-icon[name=close] {\\n  float: right;\\n  cursor: pointer;\\n}\\n\\n.title-input {\\n  background-color: var(--ion-color-light-shade);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2ZpbGUucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsOEJBQUE7QUFDRjs7QUFDQTtFQUNFLDRCQUFBO0FBRUY7O0FBQUE7RUFDRSxpQ0FBQTtFQUNBLDZCQUFBO0VBQ0EsOEJBQUE7QUFHRjs7QUFEQTtFQUNFLFlBQUE7RUFDQSxlQUFBO0FBSUY7O0FBREE7RUFDRSw4Q0FBQTtBQUlGIiwiZmlsZSI6InByb2ZpbGUucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNhcmQtaGVhZGVye1xuICBwYWRkaW5nLWJvdHRvbTogMHB4ICFpbXBvcnRhbnQ7XG59XG5pb24tY2FyZC1jb250ZW50e1xuICBwYWRkaW5nLXRvcDogMTBweCAhaW1wb3J0YW50O1xufVxuaW9uLWlucHV0IGlucHV0Lm5hdGl2ZS1pbnB1dHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2NjYyAhaW1wb3J0YW50O1xuICBwYWRkaW5nLWxlZnQ6MjBweCAhaW1wb3J0YW50O1xuICBwYWRkaW5nLXJpZ2h0OiAyMHB4ICFpbXBvcnRhbnQ7XG59XG5pb24tdG9vbGJhciBpb24taWNvbltuYW1lPVwiY2xvc2VcIl17XG4gIGZsb2F0OiByaWdodDtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4udGl0bGUtaW5wdXR7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWlvbi1jb2xvci1saWdodC1zaGFkZSk7XG59Il19 */\";","export default \".service-details-grid {\\n  --ion-grid-padding: 1px;\\n}\\n\\nion-col > p.st, ion-col > p.et {\\n  color: grey;\\n}\\n\\nion-note.status {\\n  border: 1px solid;\\n  border-radius: 50px;\\n  padding: 10px;\\n  color: white;\\n  --padding: 10px;\\n  --padding-bottom: 10px;\\n  padding-bottom: 10px;\\n}\\n\\nion-badge.status {\\n  padding: 10px;\\n  border-radius: 50px;\\n}\\n\\nion-text.status-text {\\n  color: white !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NlcnZpY2VzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtFQUNJLHVCQUFBO0FBRko7O0FBSUE7RUFDSSxXQUFBO0FBREo7O0FBR0E7RUFDSSxpQkFBQTtFQUNBLG1CQUFBO0VBQ0EsYUFBQTtFQUNBLFlBQUE7RUFDQSxlQUFBO0VBQ0Esc0JBQUE7RUFDQSxvQkFBQTtBQUFKOztBQUdBO0VBQ0ksYUFBQTtFQUNBLG1CQUFBO0FBQUo7O0FBR0E7RUFDSSx1QkFBQTtBQUFKIiwiZmlsZSI6InNlcnZpY2VzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zZXJ2aWNlLWRldGFpbHMtZGl2e1xuXG59XG4uc2VydmljZS1kZXRhaWxzLWdyaWR7XG4gICAgLS1pb24tZ3JpZC1wYWRkaW5nOiAxcHg7XG59XG5pb24tY29sID4gcC5zdCwgaW9uLWNvbCA+IHAuZXQge1xuICAgIGNvbG9yOiBncmV5O1xufVxuaW9uLW5vdGUuc3RhdHVze1xuICAgIGJvcmRlcjogMXB4IHNvbGlkO1xuICAgIGJvcmRlci1yYWRpdXM6IDUwcHg7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgLS1wYWRkaW5nOiAxMHB4O1xuICAgIC0tcGFkZGluZy1ib3R0b206IDEwcHg7XG4gICAgcGFkZGluZy1ib3R0b206IDEwcHg7XG59XG5cbmlvbi1iYWRnZS5zdGF0dXN7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBib3JkZXItcmFkaXVzOiA1MHB4O1xufVxuXG5pb24tdGV4dC5zdGF0dXMtdGV4dHtcbiAgICBjb2xvcjogd2hpdGUgIWltcG9ydGFudDtcbn0iXX0= */\";"]}